//////////////////////////////////////////////////////////////////////////
// Auto-generated by RAD
//////////////////////////////////////////////////////////////////////////
#include <WProgram.h>

#include <SoftwareSerial.h>

//////////////////////////////////////////////////////////////////////////
// plugin directives
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
// method signatures
//////////////////////////////////////////////////////////////////////////
void loop();
void setup();
// sketch signatures
int main();
int push_button();
int led();
// plugin signatures

//////////////////////////////////////////////////////////////////////////
// plugin structs
//////////////////////////////////////////////////////////////////////////
void loop();
void use_led_to_indicate_whether(bool podio_is_on);
void additional_setup();

//////////////////////////////////////////////////////////////////////////
// plugin external variables
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// sketch external variables
//////////////////////////////////////////////////////////////////////////
int __push_button_value = 0;
bool __podio_is_on = 0;

// servo_settings array

// debounce array

// hysteresis array

// spectrasymbol soft pot array


//////////////////////////////////////////////////////////////////////////
// variable and accessors
//////////////////////////////////////////////////////////////////////////
int _push_button = 8;
int _led = 2;

int push_button() {
	return _push_button;
}
int led() {
	return _led;
}

//////////////////////////////////////////////////////////////////////////
// assembler declarations
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// setup
//////////////////////////////////////////////////////////////////////////
void setup() {
	// pin modes
	pinMode(8, INPUT);
	pinMode(2, OUTPUT);
	digitalWrite( 8, HIGH ); // enable pull-up resistor for input
	additional_setup();
}

void
additional_setup() {
digitalWrite(led(), 0);
}
//////////////////////////////////////////////////////////////////////////
// helper methods
//////////////////////////////////////////////////////////////////////////

// RAD built-in helpers


//////////////////////////////////////////////////////////////////////////
// plugin methods
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// main() function
//////////////////////////////////////////////////////////////////////////
int main() {
	init();
	setup();
	for( ;; ) { loop(); }
	return 0;
}

//////////////////////////////////////////////////////////////////////////
// loop!  Autogenerated by RubyToC, sorry it's ugly.
//////////////////////////////////////////////////////////////////////////
void
loop() {
__push_button_value = digitalRead(push_button());
if (__push_button_value > 0) {
__podio_is_on = !(__podio_is_on);
};
use_led_to_indicate_whether(__podio_is_on);
}
void
use_led_to_indicate_whether(bool podio_is_on) {
if (podio_is_on) {
digitalWrite(led(), 1);
} else {
digitalWrite(led(), 0);
}
}
